{"version":3,"sources":["App.js","index.js"],"names":["thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","App","React","useState","count","setCount","work","setWork","files","setFiles","success","setSuccess","error","setError","strange","setStrange","type","setType","useDropzone","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","forEach","console","log","result","FileReader","readAsDataURL","getRootProps","getInputProps","thumbs","style","src","name","useEffect","revokeObjectURL","className","length","onClick","e","item","filename","chance","formData","FormData","append","fetch","method","body","then","res","json","prevstate","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b093b5a7.chunk.js","sourcesContent":["import './App.css'\r\nimport React from 'react'\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\nconst thumbsContainer = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginTop: 16\r\n};\r\n\r\nconst thumb = {\r\n    display: 'inline-flex',\r\n    borderRadius: 2,\r\n    border: '1px solid #eaeaea',\r\n    marginBottom: 8,\r\n    marginRight: 8,\r\n    width: 100,\r\n    height: 100,\r\n    padding: 4,\r\n    boxSizing: 'border-box'\r\n};\r\n\r\nconst thumbInner = {\r\n    display: 'flex',\r\n    minWidth: 0,\r\n    overflow: 'hidden'\r\n};\r\n\r\nconst img = {\r\n    display: 'block',\r\n    width: 'auto',\r\n    height: '100%'\r\n};\r\n\r\n\r\nfunction App() {\r\n\r\n    const [count, setCount] = React.useState(0);\r\n    const [work, setWork] = React.useState(false);\r\n    const [files, setFiles] = React.useState([]);\r\n    const [success, setSuccess] = React.useState([]);\r\n    const [error, setError] = React.useState([]);\r\n    const [strange, setStrange] = React.useState([]);\r\n    const [type, setType] = React.useState('success');\r\n\r\n    const {getRootProps, getInputProps} = useDropzone({\r\n        onDrop: acceptedFiles => {\r\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n                preview: URL.createObjectURL(file)\r\n            })));\r\n\r\n            acceptedFiles.forEach(file => {\r\n                console.log(file)\r\n                var reader = new FileReader();\r\n                let result = reader.readAsDataURL(file);\r\n                console.log(result)\r\n            })\r\n        }\r\n    });\r\n\r\n    const thumbs = files.map(file => (\r\n        <div style={thumb} key={file.name}>\r\n            <div style={thumbInner}>\r\n                {console.log(file)}\r\n                <img\r\n                    src={file.preview}\r\n                    style={img}\r\n                />\r\n            </div>\r\n        </div>\r\n    ));\r\n\r\n    React.useEffect(() => () => {\r\n        // Make sure to revoke the data uris to avoid memory leaks\r\n        files.forEach(file => URL.revokeObjectURL(file.preview));\r\n    }, [files]);\r\n\r\n    // function handlePreview(e) {\r\n    //   console.log(e)\r\n    //   if (e.currentTarget.style.position == 'fixed') {\r\n\r\n    //     // e.currentTarget.style.left = '0'\r\n    //     // e.currentTarget.style.top = '0'\r\n    //     // e.currentTarget.style.position = 'relative'\r\n    //     // e.currentTarget.style.transform = 'translateX(0%)'\r\n    //   } else {\r\n\r\n    //     e.currentTarget.style.position = 'fixed'\r\n      \r\n    //     // e.currentTarget.style.objectFit = 'scale-down'\r\n    //     // e.currentTarget.style.transform = 'translateX(-15%)'\r\n    //     // e.currentTarget.style.left = '50%'\r\n    //     // e.currentTarget.style.top = '20%'\r\n    //     // e.currentTarget.style.width = '100%'\r\n    //     // e.currentTarget.style.height = 'auto'\r\n    //   }\r\n    // }\r\n\r\n    function handleSubmit() {\r\n\r\n\r\n\r\n        let testJSON = {\r\n            \"file\": \"04/12/2021-22:19:20\",\r\n            \"status\": \"good\", // or bad or strange\r\n            \"chance\": 0.57\r\n        }\r\n\r\n        if (files?.length > 0) {\r\n          \r\n            setWork(true)\r\n            files.forEach(file => {\r\n                let formData = new FormData()\r\n\r\n                formData.append('image', file)\r\n\r\n                fetch(`http://localhost:8000/images`, {\r\n                    method: \"POST\",\r\n                    body: formData\r\n                })\r\n                    .then(res => {\r\n                        return res.json()\r\n                    })\r\n                    .then(json => {\r\n\r\n                        console.log(json)\r\n\r\n                        setCount(count++)\r\n\r\n\r\n                        if (+json.chance >= 0.45) {\r\n                          setSuccess(prevstate => {\r\n                            return [\r\n                              ...prevstate,\r\n                              json\r\n                            ]\r\n                          })                \r\n                        } else if (+json.chance >= 0.25 && +json.chance < 0.45) {\r\n                          setStrange(prevstate => {\r\n                            return [\r\n                              ...prevstate,\r\n                              json\r\n                            ]\r\n                          })  \r\n                        } else if (+json.chance < 0.25) {\r\n                          setError(prevstate => {\r\n                            return [\r\n                              ...prevstate,\r\n                              json\r\n                            ]\r\n                          })  \r\n                        }\r\n                    })\r\n            })\r\n        } else {\r\n          alert('Данные не загружены')\r\n        }\r\n\r\n    }\r\n\r\n    function handleBack() {\r\n      setWork(false)\r\n      setStrange([])\r\n      setSuccess([])\r\n      setError([])\r\n      setFiles([])\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"header\">\r\n                <div className=\"logo\">\r\n                    <h1>EQUAL</h1>\r\n                    <h3>Команда</h3>\r\n                </div>\r\n                <div className=\"sponsor\">\r\n                    <img src='croc.svg'/>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"main_title\">\r\n                    Программа для распознавания животных\r\n                </div>\r\n            {\r\n              !work ? (\r\n                <div className=\"main\">\r\n                  <div className=\"upload\">\r\n                      <button onClick={handleSubmit}>Обработать</button>\r\n                      <div className=\"toolbar\">\r\n                          Загружено: {files?.length} фото.\r\n                      </div>\r\n                      <section className=\"container\">\r\n                          <div {...getRootProps({className: 'dropzone'})}>\r\n                              <input {...getInputProps()} />\r\n                              <p>Перетащите файлы в это окно или нажмите для выбора фото или видео...</p>\r\n                          </div>\r\n                          <aside style={thumbsContainer}>\r\n                              {thumbs}\r\n                          </aside>\r\n                      </section>\r\n                  </div>\r\n              </div>\r\n              ) : (\r\n                <div className=\"result\">\r\n                  {\r\n                    files?.length == count && (\r\n                      <button onClick={handleBack}>Назад</button>\r\n                    )\r\n                  }\r\n                  <div className=\"main_title\">\r\n                      Результат (обработано {count} из {files?.length})\r\n                  </div>\r\n                  <div className=\"result_preview\">\r\n                      <div className={ type == 'success' ? \"column success_checked\" : \"column success\"} onClick={e => {setType('success')}}>\r\n                          <h3><i></i>Хорошие данные ({success?.length})</h3>\r\n                      </div >\r\n                      <div className={ type == 'strange' ? \"column warning_checked\" : \"column warning\"} onClick={e => {setType('strange')}}>\r\n                          <h3><i></i>Спорные данные ({strange?.length})</h3>\r\n                      </div>\r\n                      <div className={ type == 'error' ? \"column error_checked\" : \"column error\"} onClick={e => {setType('error')}}>\r\n                          <h3><i></i>Плохие данные ({error?.length})</h3>\r\n                      </div>\r\n                          \r\n                  </div>\r\n                  <h1>{type == 'success' ? 'Хорошие данные' : type == 'strange' ? 'Спорные данные' : 'Плохие данные'}</h1>\r\n                  {\r\n                            type == 'success' ? (\r\n                              \r\n                            <div className=\"result_images\">\r\n                              {\r\n                                success.map(item => (\r\n                                  <div>\r\n                                    <img src={`http://localhost:8000/good/${item?.filename}`}/>\r\n                                    <div className=\"chance success\">Вероятность: {+item?.chance }</div>\r\n                                  </div>\r\n                                ))\r\n                              }\r\n                              \r\n                            </div>\r\n                            ) : type == 'strange' ? (\r\n                              \r\n                              <div className=\"result_images\" >\r\n                                {\r\n                                  strange.map(item => (\r\n                                    <div>\r\n                                      <img src={`http://localhost:8000/strange/${item?.filename}`}/>\r\n                                      <div className=\"chance warning\">Вероятность: {+item?.chance }</div>\r\n                                    </div>\r\n                                  ))\r\n                                }\r\n                                \r\n                              </div>\r\n                            ) : (\r\n                            \r\n                              <div className=\"result_images\">\r\n                                {\r\n                                  error.map(item => (\r\n                                    <div>\r\n                                      <img src={`http://localhost:8000/error/${item?.filename}`}/>\r\n                                      <div className=\"chance error\">Вероятность: {+item?.chance }</div>\r\n                                    </div>\r\n                                  ))\r\n                                }\r\n                                \r\n                              </div>\r\n                              )\r\n                          }\r\n              </div>\r\n              )\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport './index.css';\r\nimport App from './App';\r\nimport React from 'react';\r\nimport ReactDOM from'react-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}