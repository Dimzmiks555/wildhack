{"version":3,"sources":["App.js","index.js"],"names":["thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","App","React","useState","work","setWork","files","setFiles","success","setSuccess","error","setError","strange","setStrange","type","setType","useDropzone","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","forEach","console","log","result","FileReader","readAsDataURL","getRootProps","getInputProps","thumbs","style","src","name","useEffect","revokeObjectURL","className","onClick","e","item","filename","chance","length","formData","FormData","append","fetch","method","body","then","res","json","prevstate","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAIMA,EAAkB,CACpBC,QAAS,OACTC,cAAe,MACfC,SAAU,OACVC,UAAW,IAGTC,EAAQ,CACVJ,QAAS,cACTK,aAAc,EACdC,OAAQ,oBACRC,aAAc,EACdC,YAAa,EACbC,MAAO,IACPC,OAAQ,IACRC,QAAS,EACTC,UAAW,cAGTC,EAAa,CACfb,QAAS,OACTc,SAAU,EACVC,SAAU,UAGRC,EAAM,CACRhB,QAAS,QACTS,MAAO,OACPC,OAAQ,QA2OGO,MAvOf,WAEI,MAAwBC,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BH,IAAMC,SAAS,IAAzC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BL,IAAMC,SAAS,IAA7C,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA0BP,IAAMC,SAAS,IAAzC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAA8BT,IAAMC,SAAS,IAA7C,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAwBX,IAAMC,SAAS,WAAvC,mBAAOW,EAAP,KAAaC,EAAb,KAEA,EAAsCC,YAAY,CAC9CC,OAAQ,SAAAC,GACJX,EAASW,EAAcC,KAAI,SAAAC,GAAI,OAAIC,OAAOC,OAAOF,EAAM,CACnDG,QAASC,IAAIC,gBAAgBL,SAGjCF,EAAcQ,SAAQ,SAAAN,GAClBO,QAAQC,IAAIR,GACZ,IACIS,GADS,IAAIC,YACGC,cAAcX,GAClCO,QAAQC,IAAIC,SAVjBG,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAefC,EAAS5B,EAAMa,KAAI,SAAAC,GAAI,OACzB,qBAAKe,MAAO/C,EAAZ,SACI,sBAAK+C,MAAOtC,EAAZ,UACK8B,QAAQC,IAAIR,GACb,qBACIgB,IAAKhB,EAAKG,QACVY,MAAOnC,QALKoB,EAAKiB,SAsGjC,OA3FAnC,IAAMoC,WAAU,kBAAM,WAElBhC,EAAMoB,SAAQ,SAAAN,GAAI,OAAII,IAAIe,gBAAgBnB,EAAKG,eAChD,CAACjB,IAyFA,sBAAKkC,UAAU,MAAf,UACI,sBAAKA,UAAU,SAAf,UACI,sBAAKA,UAAU,OAAf,UACI,uCACA,+EAEJ,qBAAKA,UAAU,UAAf,SACI,qBAAKJ,IAAI,kBAIjB,qBAAKI,UAAU,aAAf,uNAIGpC,EAmBC,sBAAKoC,UAAU,SAAf,UAEE,wBAAQC,QA7CtB,WACEpC,GAAQ,GACRQ,EAAW,IACXJ,EAAW,IACXE,EAAS,IACTJ,EAAS,KAwCG,4CACA,qBAAKiC,UAAU,aAAf,oEAGA,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAoB,WAAR1B,EAAoB,yBAA2B,iBAAkB2B,QAAS,SAAAC,GAAM3B,EAAQ,YAAzG,SACI,+BAAI,sBAAJ,uFAEJ,qBAAKyB,UAAoB,WAAR1B,EAAoB,yBAA2B,iBAAkB2B,QAAS,SAAAC,GAAM3B,EAAQ,YAAzG,SACI,+BAAI,sBAAJ,uFAEJ,qBAAKyB,UAAoB,SAAR1B,EAAkB,uBAAyB,eAAgB2B,QAAS,SAAAC,GAAM3B,EAAQ,UAAnG,SACI,+BAAI,sBAAJ,oFAIR,6BAAa,WAARD,EAAoB,kFAA2B,WAARA,EAAoB,kFAAmB,8EAEjE,WAARA,EAEA,qBAAK0B,UAAU,gBAAf,SAEIhC,EAAQW,KAAI,SAAAwB,GAAI,OACd,gCACE,qBAAKP,IAAG,4CAAgCO,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAMC,YAC9C,sBAAKJ,UAAU,iBAAf,mFAA8C,OAACG,QAAD,IAACA,OAAD,EAACA,EAAME,mBAMjD,WAAR/B,EAEF,qBAAK0B,UAAU,gBAAf,SAEI5B,EAAQO,KAAI,SAAAwB,GAAI,OACd,gCACE,qBAAKP,IAAG,+CAAmCO,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAMC,YACjD,sBAAKJ,UAAU,iBAAf,mFAA8C,OAACG,QAAD,IAACA,OAAD,EAACA,EAAME,mBAQ7D,qBAAKL,UAAU,gBAAf,SAEI9B,EAAMS,KAAI,SAAAwB,GAAI,OACZ,gCACE,qBAAKP,IAAG,6CAAiCO,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAMC,YAC/C,sBAAKJ,UAAU,eAAf,mFAA4C,OAACG,QAAD,IAACA,OAAD,EAACA,EAAME,sBAvEzE,qBAAKL,UAAU,OAAf,SACE,sBAAKA,UAAU,SAAf,UACI,wBAAQC,QApF1B,YAUa,OAALnC,QAAK,IAALA,OAAA,EAAAA,EAAOwC,QAAS,GAEhBzC,GAAQ,GACRC,EAAMoB,SAAQ,SAAAN,GACV,IAAI2B,EAAW,IAAIC,SAEnBD,EAASE,OAAO,QAAS7B,GAEzB8B,MAAM,+BAAgC,CAClCC,OAAQ,OACRC,KAAML,IAELM,MAAK,SAAAC,GACF,OAAOA,EAAIC,UAEdF,MAAK,SAAAE,GACF5B,QAAQC,IAAI2B,IACPA,EAAKV,QAAU,IAClBpC,GAAW,SAAA+C,GACT,MAAM,GAAN,mBACKA,GADL,CAEED,QAGMA,EAAKV,QAAU,MAASU,EAAKV,OAAS,IAChDhC,GAAW,SAAA2C,GACT,MAAM,GAAN,mBACKA,GADL,CAEED,QAGMA,EAAKV,OAAS,KACxBlC,GAAS,SAAA6C,GACP,MAAM,GAAN,mBACKA,GADL,CAEED,cAOpBE,MAAM,6GAgCM,0EACA,sBAAKjB,UAAU,UAAf,4EACgBlC,QADhB,IACgBA,OADhB,EACgBA,EAAOwC,OADvB,gCAGA,0BAASN,UAAU,YAAnB,UACI,gDAASR,EAAa,CAACQ,UAAW,cAAlC,cACI,qCAAWP,MACX,uXAEJ,uBAAOE,MAAOpD,EAAd,SACKmD,gB,eC1L/BwB,EAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3610a39a.chunk.js","sourcesContent":["import './App.css'\nimport React from 'react'\nimport {useDropzone} from 'react-dropzone';\n\nconst thumbsContainer = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 16\n};\n\nconst thumb = {\n    display: 'inline-flex',\n    borderRadius: 2,\n    border: '1px solid #eaeaea',\n    marginBottom: 8,\n    marginRight: 8,\n    width: 100,\n    height: 100,\n    padding: 4,\n    boxSizing: 'border-box'\n};\n\nconst thumbInner = {\n    display: 'flex',\n    minWidth: 0,\n    overflow: 'hidden'\n};\n\nconst img = {\n    display: 'block',\n    width: 'auto',\n    height: '100%'\n};\n\n\nfunction App() {\n\n    const [work, setWork] = React.useState(false);\n    const [files, setFiles] = React.useState([]);\n    const [success, setSuccess] = React.useState([]);\n    const [error, setError] = React.useState([]);\n    const [strange, setStrange] = React.useState([]);\n    const [type, setType] = React.useState('success');\n\n    const {getRootProps, getInputProps} = useDropzone({\n        onDrop: acceptedFiles => {\n            setFiles(acceptedFiles.map(file => Object.assign(file, {\n                preview: URL.createObjectURL(file)\n            })));\n\n            acceptedFiles.forEach(file => {\n                console.log(file)\n                var reader = new FileReader();\n                let result = reader.readAsDataURL(file);\n                console.log(result)\n            })\n        }\n    });\n\n    const thumbs = files.map(file => (\n        <div style={thumb} key={file.name}>\n            <div style={thumbInner}>\n                {console.log(file)}\n                <img\n                    src={file.preview}\n                    style={img}\n                />\n            </div>\n        </div>\n    ));\n\n    React.useEffect(() => () => {\n        // Make sure to revoke the data uris to avoid memory leaks\n        files.forEach(file => URL.revokeObjectURL(file.preview));\n    }, [files]);\n\n    // function handlePreview(e) {\n    //   console.log(e)\n    //   if (e.currentTarget.style.position == 'fixed') {\n\n    //     // e.currentTarget.style.left = '0'\n    //     // e.currentTarget.style.top = '0'\n    //     // e.currentTarget.style.position = 'relative'\n    //     // e.currentTarget.style.transform = 'translateX(0%)'\n    //   } else {\n\n    //     e.currentTarget.style.position = 'fixed'\n      \n    //     // e.currentTarget.style.objectFit = 'scale-down'\n    //     // e.currentTarget.style.transform = 'translateX(-15%)'\n    //     // e.currentTarget.style.left = '50%'\n    //     // e.currentTarget.style.top = '20%'\n    //     // e.currentTarget.style.width = '100%'\n    //     // e.currentTarget.style.height = 'auto'\n    //   }\n    // }\n\n    function handleSubmit() {\n\n\n\n        let testJSON = {\n            \"file\": \"04/12/2021-22:19:20\",\n            \"status\": \"good\", // or bad or strange\n            \"chance\": 0.57\n        }\n\n        if (files?.length > 0) {\n          \n            setWork(true)\n            files.forEach(file => {\n                let formData = new FormData()\n\n                formData.append('image', file)\n\n                fetch(`http://localhost:8000/images`, {\n                    method: \"POST\",\n                    body: formData\n                })\n                    .then(res => {\n                        return res.json()\n                    })\n                    .then(json => {\n                        console.log(json)\n                        if (+json.chance >= 0.45) {\n                          setSuccess(prevstate => {\n                            return [\n                              ...prevstate,\n                              json\n                            ]\n                          })\n                        } else if (+json.chance >= 0.25 && +json.chance < 0.45) {\n                          setStrange(prevstate => {\n                            return [\n                              ...prevstate,\n                              json\n                            ]\n                          })\n                        } else if (+json.chance < 0.25) {\n                          setError(prevstate => {\n                            return [\n                              ...prevstate,\n                              json\n                            ]\n                          })\n                        }\n                    })\n            })\n        } else {\n          alert('Данные не загружены')\n        }\n\n    }\n\n    function handleBack() {\n      setWork(false)\n      setStrange([])\n      setSuccess([])\n      setError([])\n      setFiles([])\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"header\">\n                <div className=\"logo\">\n                    <h1>EQUAL</h1>\n                    <h3>Команда</h3>\n                </div>\n                <div className=\"sponsor\">\n                    <img src='croc.svg'/>\n                </div>\n            </div>\n            \n            <div className=\"main_title\">\n                    Программа для распознавания животных\n                </div>\n            {\n              !work ? (\n                <div className=\"main\">\n                  <div className=\"upload\">\n                      <button onClick={handleSubmit}>Обработать</button>\n                      <div className=\"toolbar\">\n                          Загружено: {files?.length} фото.\n                      </div>\n                      <section className=\"container\">\n                          <div {...getRootProps({className: 'dropzone'})}>\n                              <input {...getInputProps()} />\n                              <p>Перетащите файлы в это окно или нажмите для выбора фото или видео...</p>\n                          </div>\n                          <aside style={thumbsContainer}>\n                              {thumbs}\n                          </aside>\n                      </section>\n                  </div>\n              </div>\n              ) : (\n                <div className=\"result\">\n                  \n                  <button onClick={handleBack}>Назад</button>\n                  <div className=\"main_title\">\n                      Результат\n                  </div>\n                  <div className=\"result_preview\">\n                      <div className={ type == 'success' ? \"column success_checked\" : \"column success\"} onClick={e => {setType('success')}}>\n                          <h3><i></i>Хорошие данные</h3>\n                      </div >\n                      <div className={ type == 'strange' ? \"column warning_checked\" : \"column warning\"} onClick={e => {setType('strange')}}>\n                          <h3><i></i>Спорные данные</h3>\n                      </div>\n                      <div className={ type == 'error' ? \"column error_checked\" : \"column error\"} onClick={e => {setType('error')}}>\n                          <h3><i></i>Плохие данные</h3>\n                      </div>\n                          \n                  </div>\n                  <h1>{type == 'success' ? 'Хорошие данные' : type == 'strange' ? 'Спорные данные' : 'Плохие данные'}</h1>\n                  {\n                            type == 'success' ? (\n                              \n                            <div className=\"result_images\">\n                              {\n                                success.map(item => (\n                                  <div>\n                                    <img src={`http://localhost:8000/good/${item?.filename}`}/>\n                                    <div className=\"chance success\">Вероятность: {+item?.chance}</div>\n                                  </div>\n                                ))\n                              }\n                              \n                            </div>\n                            ) : type == 'strange' ? (\n                              \n                              <div className=\"result_images\" >\n                                {\n                                  strange.map(item => (\n                                    <div>\n                                      <img src={`http://localhost:8000/strange/${item?.filename}`}/>\n                                      <div className=\"chance warning\">Вероятность: {+item?.chance}</div>\n                                    </div>\n                                  ))\n                                }\n                                \n                              </div>\n                            ) : (\n                            \n                              <div className=\"result_images\">\n                                {\n                                  error.map(item => (\n                                    <div>\n                                      <img src={`http://localhost:8000/error/${item?.filename}`}/>\n                                      <div className=\"chance error\">Вероятность: {+item?.chance}</div>\n                                    </div>\n                                  ))\n                                }\n                                \n                              </div>\n                              )\n                          }\n              </div>\n              )\n            }\n            \n        </div>\n    );\n}\n\nexport default App;\n","\nimport './index.css';\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from'react-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}